#ifndef _TESTBENCH_H_
#define _TESTBENCH_H_

#include <Adder.h>
#include "systemc.h"
#include "Decimator.h"
#include "Multiplier.h"

SC_MODULE(Testbench)
{ 									// a top level module; no ports
  /* channels */
  // Adder Channels
  sc_fifo<int> mAdderInput_ch_1, mAdderInput_ch_2, mAdderOutput_ch;
  // Multiplier Channels
  sc_fifo<int> mMultiplierInput_ch, mMultiplierOutput_ch;
  // Decimator Channels
  sc_fifo<int> mDecimatorInput_ch, mDecimatorOutput_ch;

  Adder uutAdder;						// Adder instance
  Decimator uutDecimator;
  Multiplier uutMultiplier;

  void stim();						// stimuli process
  void check();						// checking process

  SC_CTOR(Testbench)
  : uutAdder("Adder uut"), uutDecimator("Decimator uut"), uutMultiplier("Multiplier uut", 5)
  {
    SC_THREAD(stim);				// without sensitivity
    SC_THREAD(check);

    uutAdder.mInputPort_1.bind(mAdderInput_ch_1);					// port x of uut bound to ch_x
    uutAdder.mInputPort_2.bind(mAdderInput_ch_2);					// port y of uut bound to ch_y
    uutAdder.mOutPort.bind(mAdderOutput_ch);					// port s of uut bound to ch_s

    uutMultiplier.mInputPort.bind(mMultiplierInput_ch);
    uutMultiplier.mOutputPort.bind(mMultiplierOutput_ch);

    uutDecimator.mInputPort.bind(mDecimatorInput_ch);
    uutDecimator.mOutputPort.bind(mDecimatorOutput_ch);

  }
};

#endif

