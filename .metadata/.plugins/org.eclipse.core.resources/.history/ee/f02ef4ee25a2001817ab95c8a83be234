/*
 * NotificationTestBench.h
 *
 *  Created on: Aug 17, 2018
 *      Author: ivan
 */

#ifndef HEADERS_NOTIFICATIONTESTBENCH_H_
#define HEADERS_NOTIFICATIONTESTBENCH_H_

#include <systemc.h>

SC_MODULE(NotificationsTestbench) {

	int x;
	int y;
	sc_event new_stimulus;

	void stim()
	{
		x = 3; y = 4;
		cout << "Time: " << sc_time_stamp() << "\t" << "delta: " << sc_delta_count() << "\t" << "stim: new_stimulus.notify()" << endl;
		new_stimulus.notify();
		x = 7; y = 0;
		cout << "Time: " << sc_time_stamp() << "\t" << "delta: " << sc_delta_count() << "\t" << "stim: new_stimulus.notify()" << endl;
		new_stimulus.notify();
		// stimulus 7, 0 again
		cout << "Time: " << sc_time_stamp() << "\t" << "delta: " << sc_delta_count() << "\t" << "stim: new_stimulus.notify()" << endl;
		new_stimulus.notify();

	}

	void check()
	{
		for(;;)
		{
			wait(new_stimulus);

		}
	}


	SC_CTOR(NotificationsTestbench) {

		SC_THREAD(stim);
		SC_THREAD(check);
		sensitive << new_stimulus;
	}

};



#endif /* HEADERS_NOTIFICATIONTESTBENCH_H_ */
