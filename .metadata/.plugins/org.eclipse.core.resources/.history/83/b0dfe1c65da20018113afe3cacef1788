/*
 * bus_pv.cpp
 *
 *  Created on: Aug 17, 2018
 *      Author: ivan
 */

#include "bus_pv.h"

void Bus::write(unsigned addr, unsigned data) {

	bus_port[decode(addr)]->write( addr , data );
}

void Bus::read(unsigned addr, unsigned& data) {

	bus_port[decode(addr)]->read( addr, data );

}

unsigned Bus::decode(unsigned addr) {

	for (int i = 0; i < bus_port.size(); ++i)

}

void Bus::end_of_elaboration() {

	unsigned i, slave_start, slave_end;
	ifstream mem_map("mem_map.txt");
	unsigned slaves = bus_port.size();
	starts = new unsigned[slaves];
	ends = new unsigned[slaves];
	mem_map >> i;

	while( mem_map ) {

		mem_map >> slave_start >> slave_end;

		if( i >= slaves ) {

			cout << "Bus ERROR: slave number does not exist" << endl;
			sc_stop();

		} else {

			starts[i] = slave_start;
			ends[i] = slave_end;
			cout << "Bus slave " << i << " starts "
			<< slave_start << " ends " << slave_end << endl;

		}

		mem_map >> i;
	}
}

