/*
 * basic.h
 *
 *  Created on: Aug 9, 2018
 *      Author: ivan
 */

#ifndef HEADERS_BASIC_H_
#define HEADERS_BASIC_H_

#include <systemc.h>

SC_MODULE(Basic) {

	int x, y;
	sc_signal<int> s;
	sc_buffer<int> b;
	sc_fifo<int> f;
	sc_fifo<int> f1, f2;

	sc_signal<int> sig1, sig2;

	void p1() {

		cout << "p1" << endl;

		b.write(1);
		b.write(2);

		wait(10, SC_NS);

	}

	void p2() {
		int data;

		for (;;) {
			cout << "p2" << endl;
			data = s;
			cout << "p2 after assignment" << endl;
		}
	}

	void p3() {
		int data;

		for (;;) {
			cout << "p3" << endl;

			cout << "p3 => b: " << b.read() << endl;
			cout << "p3 => b: " << b.read() << endl;


			f.read();
		}
	}

	SC_CTOR(Basic) : x(2), y(3) {

		SC_THREAD(p1);
		SC_THREAD(p2);
		sensitive << s;
		dont_initialize();
		SC_THREAD(p3);
		sensitive << b;
		dont_initialize();

	}

};


#endif /* HEADERS_BASIC_H_ */
